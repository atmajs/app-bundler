var Files =  {
	'main.js': `
		module.exports = {
			letters: require('./data/icons.js')
		};
	`,
	'data/icons.js': `
		module.exports = ['a', 'b'];
	`,
	'index.html': `
		<!doctype html>
		<script src='jquery.js' data-bundler='ignore' />
		<script src='main.js' />
	`
};

UTest({
	$before () {
		TestHelper.registerFiles(Files);
	},
	'!should bundle commonjs scripts' () {
		return Bundler.clearCache().build('main.js', { 
			type: 'module',
			module: 'commonjs',
		}).done(resources => {
			eq_(resources.length, 1);
			var main = resources[0];

			eq_(main.url, 'build/release/main.js');


			var module = {};
			eval(main.content);
			deepEq_(module.exports.letters, ['a', 'b']);
		});
	},
	'should get resources for html' () {
		return Bundler
			.clearCache()
			.getResources('index.html')
			.then(arr => arr.map(x => x.toJSON(false)))
			.done(arr => {			
				eq_(arr.length, 3);

				var paths = arr.map(x => x.url);
				deepEq_(paths, ['data/icons.js', 'main.js', 'index.html']);

				var asModule = arr.map(x => x.asModule);
				deepEq_(asModule, [['commonjs'], ['global'], ['root']]);
			});
	},
	'should bundle scripts in html page' () {
		return Bundler.clearCache().build('index.html', {
			type: 'module',
			module: 'commonjs',
		}).done(resources => {
			eq_(resources.length, 1);
			var main = resources[0];


			logger.log(resources.length);
		});
	}
})