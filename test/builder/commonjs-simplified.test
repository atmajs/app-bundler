UTest({
	$before () {
		Bundler.clearCache();
	},	
	$teardown () {
		Bundler.clearCache();		
	},
	$config: {
		breakOnError: true
	},
	'should transform inner requires to vars': {
		$before () {
			TestHelper.registerFiles({
				'main.js': `
					module.exports = {
						letters: require('./data/icons.js')
					};
				`,
				'data/icons.js': `
					module.exports = ['a', 'b'];
				`,
			});
		},		
		'should rewrite path to load file from local app base path' () {
			return Bundler
				.build('main.js', {
					package: {
						module: 'commonjs',
						commonjs: {
							output: 'simplified'
						}
					}
				})
				.done(resources => {			
					eq_(resources.length, 1);
					var main = resources[0];

					eq_(main.url, '/build/release/main.js');

					var module = {};			
					eval(main.content);
					deepEq_(module.exports.letters, ['a', 'b']);
				});
		}
	},
});